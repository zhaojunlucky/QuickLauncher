<Dialog:CustomDialog x:Class="QuickLauncher.Dialogs.CmdEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QuickLauncher.Dialogs"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             Controls:DialogParticipation.Register="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                     mc:Ignorable="d" 
             d:DesignHeight="460" d:DesignWidth="800"
             Title="{Binding Path=Title}">
    <Grid Margin="0 5 0 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="20" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="50"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <AdornerDecorator Grid.Row="0" Grid.Column="0">
            <TextBox Height="30" Margin="0 5 0 0"
                     ToolTip="Application path"
                     Controls:TextBoxHelper.Watermark="Choose or type application"
                     Text="{Binding Path=QCommand.Path, Mode=TwoWay,NotifyOnValidationError=True,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                     Style="{DynamicResource MahApps.Styles.TextBox.Button}" IsReadOnly="{Binding QCommand.IsReadOnly}">
                <Controls:TextBoxHelper.ButtonContent>
                    <Controls:DropDownButton DisplayMemberPath="Alias" Visibility="{Binding DefaultCmdDropDownVisibility}"
                                             ItemsSource="{Binding DefaultQuickCommand}" ToolTip="Choose Predefined Command"
                                             IsEnabled="{Binding IsWritable}">
                        <Controls:DropDownButton.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:CustomDialog}}, Path=DataContext.DefaultCmdDropDownMenuItemCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding }" />
                            </Style>
                        </Controls:DropDownButton.ItemContainerStyle>
                    </Controls:DropDownButton>
                </Controls:TextBoxHelper.ButtonContent>
            </TextBox>
        </AdornerDecorator>
        <Button Grid.Row="0" Grid.Column="1" Margin="5 5 0 0" ToolTip="Click to choose application" Command="{Binding Path=ChooseApplicationCmd}"
                BorderThickness="0" IsEnabled="{Binding IsWritable}">
            <Button.Content>
                <iconPacks:PackIconMaterial Kind="FileFindOutline"/>
            </Button.Content>
        </Button>
        <AdornerDecorator Grid.Row="1" Grid.Column="0">
            <TextBox Height="30" Margin="0 5 0 0" Controls:TextBoxHelper.Watermark="Type alias" ToolTip="Type Alias"
                     Text="{Binding Path=QCommand.Alias, Mode=TwoWay,NotifyOnValidationError=True,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                     Controls:TextBoxHelper.ButtonContent="aa" IsReadOnly="{Binding QCommand.IsReadOnly}"
                     >
                <TextBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Auto Set" IsEnabled="{Binding IsWritable}" Command="{Binding Path=AutoSetAliasCmd}" />
                        <Separator />
                        <MenuItem Command="ApplicationCommands.Cut" Style="{DynamicResource MahApps.Styles.MenuItem}" />
                        <MenuItem Command="ApplicationCommands.Copy" Style="{DynamicResource MahApps.Styles.MenuItem}" />
                        <MenuItem Command="ApplicationCommands.Paste" Style="{DynamicResource MahApps.Styles.MenuItem}" />
                    </ContextMenu>
                </TextBox.ContextMenu>
            </TextBox>
        </AdornerDecorator>
        <AdornerDecorator Grid.Row="2" Grid.Column="0">
            <TextBox Height="30"  Margin="0 5 0 0" Controls:TextBoxHelper.Watermark="Choose or type working directory" ToolTip="Application working directory"
                     Text="{Binding Path=QCommand.WorkDirectory, Mode=TwoWay,NotifyOnValidationError=True,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                     IsReadOnly="{Binding QCommand.IsReadOnly}">
                <TextBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Auto Set" IsEnabled="{Binding IsWritable}" Command="{Binding AutoSetWorkingDirCmd}" />
                        <Separator />
                        <MenuItem Command="ApplicationCommands.Cut" Style="{DynamicResource MahApps.Styles.MenuItem}" />
                        <MenuItem Command="ApplicationCommands.Copy" Style="{DynamicResource MahApps.Styles.MenuItem}" />
                        <MenuItem Command="ApplicationCommands.Paste" Style="{DynamicResource MahApps.Styles.MenuItem}" />
                    </ContextMenu>
                </TextBox.ContextMenu>
            </TextBox>
        </AdornerDecorator>
        <Button Grid.Row="2" Grid.Column="1" Margin="5 5 0 0" BorderThickness="0" ToolTip="Click to choose application working directory"
                Command="{Binding Path=ChooseWorkingDirCmd}" IsEnabled="{Binding IsWritable}">
            <Button.Content>
                <iconPacks:PackIconMaterial Kind="FolderCogOutline" />
            </Button.Content>
        </Button>
        <TextBox Height="60" Grid.Row="3" Grid.Column="0" Margin="0 5 0 0" TextWrapping="Wrap" Controls:TextBoxHelper.Watermark="Type arguments" ToolTip="Type arguments"
                 Text="{Binding QCommand.Command}" IsReadOnly="{Binding QCommand.IsReadOnly}"></TextBox>

        <Button Grid.Row="3" Grid.Column="1" Margin="5 5 0 0" ToolTip="Click to change icon" MaxWidth="40" MaxHeight="40"
                Visibility="{Binding QCommand.ImgVisibility}" Background="Transparent" BorderThickness="0"
                Command="{Binding Path=ChooseIconCmd}" IsEnabled="{Binding IsWritable}">
            <Button.Content>
                <Image Source="{Binding QCommand.Img}"></Image>
            </Button.Content>
        </Button>
        <Controls:ToggleSwitch Grid.Row="4" Grid.Column="0"
                               IsOn="{Binding QCommand.IsAutoStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Margin="0 5, 0, 0"
                               Foreground="{DynamicResource MahApps.Brushes.Control.Background}">
            <Controls:ToggleSwitch.Header>
                <Label Margin="-5, 0, 0, 0" Content="Auto Start" Foreground="{DynamicResource MahApps.Brushes.Control.Background}"/>
            </Controls:ToggleSwitch.Header>
        </Controls:ToggleSwitch>
        <Grid Grid.Row="5" Grid.ColumnSpan="2"  Margin="0 5 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Command="{Binding Path=CloseCommand}" Content="Cancel" Style="{DynamicResource MahApps.Styles.Button.Dialogs.AccentHighlight}"/>
            <Button Grid.Column="1" Command="{Binding Path=SaveCmd}" Content="Save" Style="{DynamicResource MahApps.Styles.Button.Dialogs.Accent}"/>
        </Grid>
    </Grid>
</Dialog:CustomDialog>
