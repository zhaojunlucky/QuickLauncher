<Controls:MetroWindow x:Class="QuickLauncher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QuickLauncher"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        x:Name="root" 
        BorderThickness="0" 
        GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
        NonActiveGlowBrush="#CDFF0000"
        WindowTransitionsEnabled="False"
        Controls:DialogParticipation.Register="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"
        Title="Quick Launcher" MinHeight="608" MinWidth="1034" Width="1034" Height="608" WindowStartupLocation="CenterScreen" 
                      Closing="Root_Closing" Activated="Root_Activated" ShowTitleBar="False" Loaded="Root_Loaded" Closed="Root_Closed">
    <Grid ShowGridLines="False" ContextMenu="{DynamicResource ListViewContextMenu}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="393*"/>
            <ColumnDefinition Width="82*"/>
            <ColumnDefinition Width="615*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>


        <WrapPanel Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Center">
            <Image Width="32" Height="32" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Source="/Resources/launcher.ico" Margin="5,0,0,0">
            </Image>
            <Label Content="{Binding Title}" FontSize="14"></Label>
            <Separator Width="20">
                <Separator.LayoutTransform>
                    <RotateTransform Angle="90" />
                </Separator.LayoutTransform>
            </Separator>
            <TextBox Width="200" VerticalAlignment="Center"
                         Controls:TextBoxHelper.Watermark="Type to Search" Margin="5, 0, 5, 0" Controls:TextBoxHelper.UseFloatingWatermark="True"
                         Controls:TextBoxHelper.IsWaitingForData="True" Controls:TextBoxHelper.WatermarkAlignment="Right"
                         Controls:TextBoxHelper.ClearTextButton="True" HorizontalAlignment="Left" Text="{Binding Path=CommandSearchKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.TextBox.Search}" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                <Setter Property="Controls:TextBoxHelper.ButtonContent" Value="r" />
                                <Setter Property="Controls:TextBoxHelper.ButtonContentTemplate" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </WrapPanel>
        <Controls:MetroAnimatedTabControl Grid.Row="1" Grid.ColumnSpan="3" Margin="0,0,0,-50" Width="Auto" Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"
                                          ItemsSource="{Binding Tabs}" SelectedIndex="{Binding SelectedTabIndex}">
            <Controls:MetroAnimatedTabControl.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type TabItem}}" TargetType="{x:Type TabItem}">
                    <Setter Property="Header" Value="{Binding Header}" />
                </Style>
            </Controls:MetroAnimatedTabControl.ItemContainerStyle>
            <Controls:MetroAnimatedTabControl.ContentTemplate>
                <DataTemplate>
                    <ListView MouseDoubleClick="CommandsList_MouseDoubleClick" ScrollViewer.VerticalScrollBarVisibility="Auto" MinHeight="539" MinWidth="1070" SelectionMode="Extended"
                      Padding="10,0,10,0" IsSynchronizedWithCurrentItem="True"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" TextSearch.TextPath="Alias" IsTextSearchCaseSensitive="False"
                      ItemsSource="{Binding Path=QuickCommands, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=SelectedQuickCommand}"
                      SelectionChanged="Selector_OnSelectionChanged" dd:DragDrop.IsDragSource="False"
                      dd:DragDrop.IsDropTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.SelectedTab.IsWritable}"
                      dd:DragDrop.DropHandler="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext}">
                        <ListView.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem Header="Start" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.StartCommand}" 
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}"/>
                                <MenuItem Header="Start As Administrator"  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.StartAdminCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}"/>
                                <MenuItem Header="Open Working Directory" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.OpenWorkingDirCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}"/>
                                <Separator></Separator>
                                <MenuItem Header="Edit" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.EditCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}"/>
                                <MenuItem Header="Edit Environment Variables" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.EditEnvConfigCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}"/>
                                <MenuItem Header="Copy" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.CopyCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}"/>
                                <MenuItem Header="Delete" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.DeleteCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}"/>
                                <MenuItem Header="Refresh" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.RefreshCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItems}"/>
                            </ContextMenu>

                            <ItemsPanelTemplate x:Key="tileViewCtrl">
                                <WrapPanel Width="{Binding (FrameworkElement.ActualWidth),
                     RelativeSource={RelativeSource 
                                     AncestorType=ScrollContentPresenter}}"
                     ItemWidth="{Binding (ListView.View).ItemWidth,
                     RelativeSource={RelativeSource AncestorType=ListView}}"

                     ItemHeight="{Binding (ListView.View).ItemHeight,
                     RelativeSource={RelativeSource AncestorType=ListView}}"/>
                            </ItemsPanelTemplate>
                        </ListView.Resources>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" >
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                <!--<EventSetter Event="ContextMenuOpening" Handler="CommandsList_ContextMenuOpening"/>-->
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.Style>
                            <Style TargetType="{x:Type ListView}" >
                                <Setter Property="ContextMenu" Value="{DynamicResource ListViewContextMenu}" />
                                <Setter Property="ItemsPanel" Value="{DynamicResource tileViewCtrl}" />
                                <Setter Property="ItemTemplate" Value="{DynamicResource tileView}" />
                            </Style>

                        </ListView.Style>
                    </ListView>
                </DataTemplate>
            </Controls:MetroAnimatedTabControl.ContentTemplate>
        </Controls:MetroAnimatedTabControl>
        <DockPanel Grid.Row="2" Height="25" Grid.ColumnSpan="3">
            <StatusBar DockPanel.Dock="Left" Width="Auto" Height="Auto">
                <StatusBarItem Content="{Binding Path=StatusLabel}" Height="25" VerticalAlignment="Center"/>
                <StatusBarItem
                    Content="{Binding Path=TabCommandCount, Mode=OneWay}"
                    Height="25"
                    ContentStringFormat="Total Commands: {0}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    Padding="0, 0, 5, 0"
                    />
            </StatusBar>
        </DockPanel>
    </Grid>
    <Window.Resources>
        <ContextMenu x:Key="ListViewContextMenu" >
            <MenuItem Header="New Quick Command" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.NewQuickCommand}"/>
            <MenuItem Header="Refresh All" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.RefreshAllCommand}"></MenuItem>
            <Separator></Separator>
            <MenuItem Header="Settings" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.SettingsCommand}"/>
            <MenuItem Header="About" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=DataContext.AboutCommand}"/>
        </ContextMenu>
        <DataTemplate x:Key="tileView">
            <Grid Height="80" Width="80" Background="{Binding ErrorBackground}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Image Grid.Row="0" Source="{Binding Img}" ToolTip="{Binding Alias}" Visibility="{Binding ImgVisibility}" Width="48" Height="48" HorizontalAlignment="Center"/>
                <TextBlock Grid.Row="1" Text="{Binding Alias}" ToolTip="{Binding Alias}" TextWrapping="Wrap" TextAlignment="Center" TextTrimming="WordEllipsis"/>
            </Grid>
        </DataTemplate>
    </Window.Resources>
</Controls:MetroWindow>
